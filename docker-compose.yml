version: '3.8'

services:
  db:
    image: postgres:16.1-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 25432:5432
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d/init-user-db.sh:delegated
      - pg_data:/var/lib/postgresql/data
  
  website:
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - static_volume:/website/static
      - website_media_data:/website/media
      - ./core:/website/core
      - ./mkdwn2html:/website/mkdwn2html
      - /website/.venv
    env_file: ./.env
    working_dir: /website
    command: uv run python manage.py runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
  
  nginx:
    build: ./docker/dev/nginx
    volumes:
      - static_volume:/website/static
      - website_media_data:/website/media
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - website
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pg_data:
  static_volume:
  website_media_data:
  certbot_conf:
  certbot_www: